#!/bin/bash
# enable error reporting to the console
set -e

lang=$LANG
language=$LANGUAGE
lc_all=$LC_ALL

# make the system case sensitive for find
export LANG=C && export LANGUAGE=C && LC_ALL=C

# skip if build is triggered by pull request
if [ "$TRAVIS_PULL_REQUEST" == "true" ]; then
  echo "this is PR, exiting"
  exit 0
fi

# check filenames format
for file in $(find _i18n/ -iname "*.md" -not -regex "_i18n/\w+/_posts/[a-z0-9\.\-]+\(/[a-z0-9\.\-]*\)*\(\.md\)?"); do
  echo "Filenames must match [a-z0-9\.\-] expression. Filename '$file' is invalid"
  exit 1
done

for file in $(find images -not -regex "images\(/[a-z0-9\.\-]+\(/[a-z0-9\.\-]*\)*\(\.(png|jpg|gif)\)?\)?"); do
  echo "Filenames must match [a-z0-9\.\-] expression. Filename '$file' is invalid"
  exit 1
done

# restore system defaults
export LANG=$lang && export LANGUAGE=$language && LC_ALL=$lc_all

# lint for markdown
bundle exec mdl --rules ${RULES} _i18n/

if [ -n "$GH_TOKENN" ]; then
  # cleanup "_site"


  echo "UsuÃ¡rio setado"
  git config user.email "atilladuarte@gmail.com"
  git config user.name "Atilla de Mattos Duarte"

  # clone remote repo to "_site"
  git clone https://DeveloperCielo:${GH_TOKENN}@github.com/DeveloperCielo/developercielo.github.io.git ../for-deploy
  
  git remote remove origin
  git remote add origin https://DeveloperCielo:${GH_TOKENN}@github.com/DeveloperCielo/developercielo.github.io.git

  cd ../for-deploy
  # compiles front-end stuff
  npm i -g yarn
  
  yarn
  yarn gulp
  # npm install
  # npm run gulp

  # build with Jekyll into "_site"
  bundle exec jekyll build --quiet -b ${HOST}
  bundle exec htmlproofer ./_site --disable-external --allow-hash-href --empty-alt-ignore

  echo "Entrando na pasta do SITE"
  cd ../developercielo.github.io
  rm -rf *
  echo "Checando se tudo foi limpo"
  ls

  echo "Copiando o .git"
  cp -R ../for-deploy/.git .
  cp ../for-deploy/.gitignore .
  git stash
  git checkout master

  # Copy generated HTML site from source branch in original repository.
  # Now the `master` branch will contain only the contents of the _site directory.
  cp -R ../for-deploy/_site/* .
  
  # Make sure we have the updated .travis.yml file so tests won't run on master.
  cp ../for-deploy/.travis.yml .

  echo "Checando status"
  git status
  git add -A .
  git status
  echo "Status checado"

  echo "Preparando o COMMIT"
  git commit -a -m "[$TRAVIS_COMMIT]: $TRAVIS_COMMIT_MESSAGE"

  echo "Subindo as modificaÃ§Ãµes ðŸš€"
  git push --force origin master
fi
